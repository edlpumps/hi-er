include common.pug

doctype xml
svg(id="label_svg", xmlns="http://www.w3.org/2000/svg", xmlns:xlink="http://www.w3.org/1999/xlink", version="1.1", width="620", height="1033", preserveAspectRatio="xMinYMin meet", viewBox="0 0 620 620")

    defs
     include fonts.pug
    
    - var y_loc = 15;
    rect(x="0", y="0", rx="0", ry="0", width="620", height="1033", style="fill:#FFFFFF;;stroke: #222222;;stroke-width:1;")
    image(x="25", y="25", height="100px", width="565px", xlink:href=logo)
    //-line(x1="21", y1="25", x2="21", y2="310", stroke-width="2", stroke="#000000")
    //-line(x1="595", y1="25", x2="595", y2="310", stroke-width="2", stroke="#000000")

    text(x="30", y="160", style="font-family: 'Arimo'; font-weight:bold", font-size="24", text-anchor="start", fill="black") #{brand}
    text(x="330", y="160", style="font-family: 'Arimo'; font-weight:bold", font-size="24", text-anchor="start", fill="black") #{doe} Pump Type

    //text(x="30", y="190", style="font-family: 'Arimo'; font-weight:bold", font-size="24", text-anchor="start", fill="black") Model #:
    text(x="30", y="240", style="font-family: 'Arimo'; font-weight:bold", font-size="24", text-anchor="start", fill="black") Nominal Speed:
    
    text(x="30", y="200", style="font-family: 'Arimo';font-weight:bold", font-size="24", text-anchor="start", fill="black") #{basic_model}
    text(x="230", y="240", style="font-family: 'Arimo';font-weight:bold", font-size="24", text-anchor="start", fill="black") #{speed}
    
    text(x="330", y="200", style="font-family: 'Arimo'; font-weight:bold", font-size="24", text-anchor="start", fill="black") #{pm} 
    text(x="330", y="240", style="font-family: 'Arimo'; font-weight:bold", font-size="24", text-anchor="start", fill="black") #{config}

    //Black rectangle
    rect(x="30", y="270", rx="0", ry="0", width="555", height="75", style="fill:#000000;stroke: #000000;stroke-width:1;")
    text(x="45", y="320", style="font-family: 'Arimo', Helvetica; font-weight:bold", font-size="34", text-anchor="start", fill="white") #{load}
    text(x="400", y="320", style="font-family: 'Arimo', Helvetica; font-weight:bold", font-size="34", text-anchor="start", fill="white") PEI
    text(x="455", y="325", style="font-family: 'Arimo', Helvetica; font-weight:bold", font-size="14", text-anchor="start", fill="white") #{load_abbr}
    text(x="475", y="320", style="font-family: 'Arimo', Helvetica; font-weight:bold", font-size="34", text-anchor="start", fill="white") :  #{pei}

    //ER Box
    rect(x="30", y="370", rx="0", ry="0", width="555", height="250", style="fill:none;stroke: #000000;stroke-width:1;")
    
    - var tick = 0;
    - var scale_width = 500;
    - var start = 60;
    - var tick_distance = scale_width / 100
    - var x = start;
    - var v_start = 475;


    while tick < 101
        - var y1 = tick % 100 == 0 ? v_start+50 : v_start+80
        - var y2 = tick % 25 == 0 ? v_start+110 : v_start+95
        - var major = (tick % 100 == 0) || ( tick %25 == 0)
        - var color = tick % 25 == 0 ? 'black' : 'grey'
        if major
          line(x1=x, y1=y1, x2=x, y2=y2, stroke-width='2', stroke=color)

        - x += tick_distance
        - tick ++
    
    
    line(x1=start, y1=v_start+80, x2=(start + scale_width), y2=v_start+80, stroke-width='2', stroke='black')

    - var center = er_pos
    - var label_edge_padding = (32 * (er.toString().length - 1)) + 16;
    - var label_left = center - label_edge_padding;
    - var label_right = center + label_edge_padding;
    - var min_left = start - 20;
    - var max_right = start + scale_width + 20;
    - var label_align = label_left <= min_left ? "start" : label_right >= max_right ? "end" : "middle";
    - var label_pos = label_align == "start" ? min_left : label_align == "end" ? max_right : center;
    - var left = center - 10
    - var right = center + 10
    - var positions = center + "," + (v_start+55) + " " + left + "," + (v_start+30) +" " + right + "," + (v_start+30);    
    
    text(x="320", y="400", style="font-family: 'Arimo', Helvetica; font-weight:bold", font-size="30", text-anchor="middle", fill="black") ENERGY RATING

    // this is the caret below the rating label
    polygon(fill="#000000", stroke="#000000", stroke-width="1", points=positions)

    //Rating Label
    text(x=label_pos, y=v_start+20, style="font-family: 'Arimo'; font-weight:bold", font-size="80", text-anchor=label_align, fill="#000000") #{er}

    rect(x="61", y=v_start+60, rx="0", ry="0", width=bar_width,  height="19", style="fill:#000000;stroke: #000000;stroke-width:1;")

    text(x="60", y=v_start+130, style="font-family: 'Arimo'; font-weight:bold", font-size="16", text-anchor="start", fill="black") Least Efficient
    text(x="310", y=v_start+130, style="font-family: 'Arimo'; font-weight:bold", font-size="16", text-anchor="middle", fill="grey") RANGE
    text(x="560", y=v_start+130, style="font-family: 'Arimo'; font-weight:bold", font-size="16", text-anchor="end", fill="black") Most Efficient
    
    - var large_box = 620;
    - var large_box_mid = large_box / 2; //310 pixels
    - var box_width = large_box_mid - 10 - 30; //270 pixels, 76mm

    // 1mm per 3.55pixels
    - var mm_to_pixels = 3.55;
    - var box_mid = box_width / 2;

    // Two rectangles
    //Left - Annual Energy Savings 
    - var e_savings = Math.round(er * motor_power * 29.828);
    - var e_string = e_savings.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    //Right Cost Savings
    - var c_savings = Math.round(er * motor_power * 4.4742);
    - var c_string = c_savings.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    //Figure out the longest string to determine the font size
    - var max_len = Math.max(e_string.length, c_string.length);
    - var font_size = (max_len > 6 ? 35 : 50);
    - var char_size = (max_len > 6 ? 5 : 7); //mm
    - var comma_char_size = 4; //mm
    
    //Calculate Annual Energy Savings
    - var e_len = e_savings.toString().length;
    - var kwh_pixels = 13 * mm_to_pixels;
    - var e_str_pixels = ((char_size * e_len) + (1 * (e_len-1))) * mm_to_pixels;
    - var e_middle = 30+box_mid;
    //Convert to mm and find midpoint
    - var comma_pixels = (e_string.split(",").length-1) * comma_char_size * mm_to_pixels;
    - var e_string_mid = (e_str_pixels + comma_pixels + kwh_pixels)/2;
 
    rect(x=30, y=v_start+180, rx="0", ry="0", width=box_width, height="100", style="fill:none;stroke: #000000;stroke-width:2;" )
    text(x=e_middle-e_string_mid, y=v_start+230, style="font-family: 'Arimo'; font-weight:bold", font-size=font_size, text-anchor="start", fill="black") #{e_string}
    text(x=e_middle+(e_string_mid-kwh_pixels)+3, y=v_start+230, style="font-family: 'Arimo'; font-weight:bold", font-size="20", text-anchor="start", fill="black") kWh
    text(x=63, y=v_start+260, style="font-family: 'Arimo';", font-size="20", text-anchor="start", fill="black") Annual Energy Savings
    text(x=270, y=v_start+255, style="font-family: 'Arimo';", font-size="12", text-anchor="start", fill="black") &#x2021;
    
    //Right - Annual Cost Savings
    - var c_len = c_savings.toString().length;
    - var c_str_pixels = ((char_size * (c_len+1)) + (1 * (c_len-1))) * mm_to_pixels;
    - comma_pixels = (c_string.split(",").length-1) * comma_char_size * mm_to_pixels;
    - var c_string_mid = (c_str_pixels + comma_pixels)/2;
    - var c_middle = 30+box_width+20+box_mid;
    - var c_mm = ((char_size * (c_len+1)) + (1 * (c_len-1))) + ((c_string.split(",").length-1) * comma_char_size);

    rect(x=30+box_width+20, y=v_start+180, rx="0", ry="0", width=box_width, height="100", style="fill:none;stroke: #000000;stroke-width:2;" )
    text(x=c_middle-c_string_mid, y=v_start+230, style="font-family: 'Arimo'; font-weight:bold", font-size=font_size, text-anchor="start", fill="black") $#{c_string}
    text(x=30+box_width+63, y=v_start+260, style="font-family: 'Arimo';", font-size="20", text-anchor="start", fill="black") Annual Cost Savings
    text(x=278+box_width, y=v_start+255, style="font-family: 'Arimo';", font-size="12", text-anchor="start", fill="black") &#x2021;
    
    //Bottom part
    - var footer_x=820;
    text(x=23, y=footer_x-5, style="font-family: Arimo;", font-size="12", text-anchor="start",fill="black") &#x2021;
    text(x=30, y=footer_x, style="font-family: Arimo;", font-size="18", text-anchor="start",fill="black") Estimated annual savings are based on the #{motor_power} hp motor, 4000 annual  
    text(x=28, y=(footer_x+=25), style="font-family: 'Arimo';", font-size="18.5", text-anchor="start", fill="black")  run hours, and 15&#x00a2; per kWh, when compared to the  least efficient 
    text(x=28, y=(footer_x+=25), style="font-family: 'Arimo';", font-size="18", text-anchor="start", fill="black")  pump allowed on the market. Actual savings may vary. Visit the Pump
    text(x=28, y=(footer_x+=25), style="font-family: 'Arimo';", font-size="18", text-anchor="start", fill="black")  Savings Calculator at www.pumps.org/pscalculator.
    +footer(30, 585, 950, 24)


    
        
