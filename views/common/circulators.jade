mixin control_method(cm)
	if (cm == 'no-speed-control')
		span No Speed Control
	else if (cm == 'pressure-control')
		span Pressure Control
	else if (cm == 'temperature-control')
		span Temperature Control
	else if (cm == 'manual-control')
		span Manual Control
	else if (cm == 'external-control')
		span External Input Signal Only Control
	else if (cm == 'external-other-control')
		span External Input Signal and Other Controls

mixin vue_circulator_components()
	script#v-circulator-label(type='text/x-template')
		section.text-center
			div.padded
				img(:src='"/participant/circulators/"+pump._id+"/svg/label"')
				br
				a(:href='"/participant/circulators/"+pump._id+"/svg/label?download=true"').margin-right Download SVG
				a(:href='"/participant/circulators/"+pump._id+"/png/label?download=true"') Download PNG
			div.padded
				img(:src='"/participant/circulators/"+pump._id+"/svg/sm-label"')
				br
				a(:href='"/participant/circulators/"+pump._id+"/svg/sm-label?download=true"').margin-right Download SVG
				a(:href='"/participant/circulators/"+pump._id+"/png/sm-label?download=true"') Download PNG
			div.padded
				img(:src='"/participant/circulators/"+pump._id+"/svg/qr"')
				br
				a(:href='"/participant/circulators/"+pump._id+"/svg/qr?download=true"').margin-right Download SVG
				a(:href='"/participant/circulators/"+pump._id+"/png/qr?download=true"') Download PNG
		

	script#v-circulator-data-details(type='text/x-template')
		section.padded
			section
					label Available Control Methods:
					span.control-method(v-for='method of pump.control_methods')
						control-method(:method='method')
			section
				table.table
					thead
						tr
							th
							th Control Method
							th(colspan='4').text-center Input Power ({{units.power.label}})
							th Output Power ({{units.power.label}})
							th W2W &eta;
							th PEI
							th ER
					tbody
						tr
							td Least Consumptive
							td: control-method(:method='pump.least.control_method')
							td(v-if='num_input_powers(pump.least.control_method) == 2', colspan='2') {{(pump.least.input_power[0]*units.power.factor).toFixed(2)}}
							td(v-if='num_input_powers(pump.least.control_method) == 2', colspan='2') {{(pump.least.input_power[1]*units.power.factor).toFixed(2)}}
							td(v-if='num_input_powers(pump.least.control_method) == 4') {{(pump.least.input_power[0]*units.power.factor).toFixed(2)}}
							td(v-if='num_input_powers(pump.least.control_method) == 4') {{(pump.least.input_power[1]*units.power.factor).toFixed(2)}}
							td(v-if='num_input_powers(pump.least.control_method) == 4') {{(pump.least.input_power[2]*units.power.factor).toFixed(2)}}
							td(v-if='num_input_powers(pump.least.control_method) == 4') {{(pump.least.input_power[3]*units.power.factor).toFixed(2)}}
							td {{(pump.least.output_power[3] * units.power.factor).toFixed(2)}}
							td {{(pump.least.water_to_wire_efficiency).toFixed(0)}}%
							td: pei(:value='pump.least.pei')
							td: energy-rating(:value='pump.least.energy_rating')
						tr(v-if='dual_cm()')
							td Most Consumptive
							td: control-method(:method='pump.most.control_method')
							td(v-if='num_input_powers(pump.most.control_method) == 2', colspan='2')	{{(pump.most.input_power[0]*units.power.factor).toFixed(2)}}
							td(v-if='num_input_powers(pump.most.control_method) == 2', colspan='2')	{{(pump.most.input_power[1]*units.power.factor).toFixed(2)}}
							td(v-if='num_input_powers(pump.most.control_method) == 4') {{(pump.most.input_power[0]*units.power.factor).toFixed(2)}}
							td(v-if='num_input_powers(pump.most.control_method) == 4') {{(pump.most.input_power[1]*units.power.factor).toFixed(2)}}
							td(v-if='num_input_powers(pump.most.control_method) == 4') {{(pump.most.input_power[2]*units.power.factor).toFixed(2)}}
							td(v-if='num_input_powers(pump.most.control_method) == 4') {{(pump.most.input_power[3]*units.power.factor).toFixed(2)}}
							td {{(pump.most.output_power[3] * units.power.factor).toFixed(2)}}
							td {{(pump.most.water_to_wire_efficiency).toFixed(0)}}%
							td: pei(:value='pump.most.pei')
							td: energy-rating(:value='pump.most.energy_rating')
				
				.help-block(v-if='!public') Note that input power at alternative load points is not shown to the public.
        
	script#v-circulator-details(type='text/x-template')
		section
			.alert.alert-warning(v-if='pump.pending')
				p This pump has not been published yet.  You must activate the pump before it will be visible to the public.
			.alert.alert-danger(v-if='!pump.listed && !pump.pending')
				p This pump is no longer commercially available.
			.row
				.col.col-xs-5
					label HI Rating ID:
				.col.col-xs-7
					.form-control-static: a(:href="'/circulator/ratings/'+pump.rating_id") {{pump.rating_id}}
			.row
				.col.col-xs-5
					label Basic model #:
				.col.col-xs-7
					.form-control-static {{pump.basic_model}}
			.row
				.col.col-xs-5
					label Manufacturer model #:
				.col.col-xs-7
					.form-control-static {{pump.manufacturer_model}}
			.row(v-if='pump.alternative_model')
				.col.col-xs-5
					label Alternative model #:
				.col.col-xs-7
					.form-control-static {{pump.alternative_model}}
			.row
				.col.col-xs-5
					label Brand:
				.col.col-xs-7
					.form-control-static {{pump.brand}}
			.row
				.col.col-xs-5
					label Type:
				.col.col-xs-7
					.form-control-static {{pump.type}}
			.row
				.col.col-xs-5
					label Rated Control Method:
				.col.col-xs-7
					.form-control-static: control-method(:method='pump.least.control_method')
			.row
				.col.col-xs-5
					label BEP Flow Rated:
				.col.col-xs-7
					.form-control-static {{(pump.flow * units.flow.factor).toFixed(2)}} {{units.flow.label}}
			.row
				.col.col-xs-5
					label BEP Head:
				.col.col-xs-7
					.form-control-static {{(pump.head[3] * units.head.factor).toFixed(2)}} {{units.head.label}}
			.row
				.col.col-xs-5
					label HI approved laboratory:
				.col.col-xs-7
					.form-control-static {{pump.laboratory ? pump.laboratory.name + ' - ' + pump.laboratory.code : 'N/A'}}
			.row(v-if='pump.date')
				.col.col-xs-5
					label Date listed:
				.col.col-xs-7
					.form-control-static {{moment(pump.date).format("MMM DD, YYYY")}}
				
	script.
		Vue.component('circulator-label', {
			props: ['pump'],
			template: '#v-circulator-label',
			methods: {
				moment(...args) {
					// eslint-disable-next-line no-undef
					return moment(...args);
				},
				dual_cm: function() {
					return  this.pump.most && this.pump.most.control_method;
				}
			},
			computed: {
				waip: function() {
					if (this.pump) {
						return this.pump.least.output_power[3] / this.pump.least.water_to_wire_efficiency;
					} else {
						return 0;
					}
				},
				hp: function() {
					if ( this.waip < 1.0/30 ) return 0;
					else if ( this.waip < 1.0/8 ) return 1;
					else if ( this.waip < 3.0/4 ) return 2;
					else return 3;
				},
				maxScale: function() {
					const scales = [335.4, 189.6, 158.6, 142.3];
					return scales[this.hp];
				}
			}
		}),
		Vue.component('circulator-details', {
			props: ['pump', 'units'],
			template: '#v-circulator-details',
			methods: {
				moment(...args) {
					// eslint-disable-next-line no-undef
					return moment(...args);
				},
				dual_cm: function() {
					return  this.pump.most && this.pump.most.control_method;
				}
			}
		}),
		Vue.component('circulator-data-details', {
			props: ['pump', 'units', 'public'],
			template: '#v-circulator-data-details',
			methods: {
				moment(...args) {
					// eslint-disable-next-line no-undef
					return moment(...args);
				},
				dual_cm: function() {
					return  this.pump.most && this.pump.most.control_method;
				}, 
				num_input_powers: function(cm) {
					if (cm == 'no-speed-control')
						return 4;
					else if (cm == 'pressure-control')
						return 4;
					else if (cm == 'temperature-control')
						return 4;
					else if (cm == 'manual-control')
						return 2;
					else if (cm == 'external-control')
						return 4;
					else if (cm == 'external-other-control')
						return 2;
				}
			}
		}),
		Vue.component('control-method', {
			props: ['method'],
			template: '<span>{{text}}</span>',
			computed: {
				text() {
					if (this.method == 'no-speed-control')
						return "No Speed Control";
					else if (this.method == 'pressure-control')
						return "Pressure Control";
					else if (this.method == 'temperature-control')
						return "Temperature Control";
					else if (this.method == 'manual-control')
						return "Manual Control";
					else if (this.method == 'external-control')
						return "External Input Signal Only Control";
					else if (this.method == 'external-other-control')
						return "External Input Signal and Other Controls";
				}
			}
		});

		Vue.component('pei', {
			props: ['value'],
			template: '<span>{{text}}</span>',
			computed: {
				text() {
					return this.value.toFixed(2)
				}
			}
		});

		Vue.component('energy-rating', {
			props: ['value'],
			template: '<span>{{text}}</span>',
			computed: {
				text() {
					return this.value.toFixed(0)
				}
			}
		});

